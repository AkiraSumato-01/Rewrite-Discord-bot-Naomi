# python3.6
# -*- coding: utf-8 -*-

from discord.ext import commands
from random import randint, choice
import requests
import discord
import apiai
import nekos
import json
import os

import pokebase as pb
import asyncio

from utils.NekosWrapper import (get_neko, 
                                NekoNotInTags,
                                nekos_tags)

class Fun(object):
    """–ö–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π - Fun"""
    def __init__(self, bot):
        self.bot = bot
    
    @commands.command(name='voteyn')
    async def voteyn(self, ctx, msg: commands.clean_content):

        reactions = ['üëç', 'üëé']

        embed = discord.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ',
                              description=msg)
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        m = await ctx.send('–ì–æ–ª–æ—Å—É–µ–º!', embed=embed)

        self.voted_down = 0
        self.voted_up = 0
        self.checked = []

        async def checking():
            for x in reactions:
                await m.add_reaction(x)

            def check(r, u):
                if not m \
                    or r.message.id != m.id \
                    or u.id in self.checked \
                    or u.bot:
                    return False
                return True

            while True:
                r, u = await self.bot.wait_for('reaction_add', check=check)
                if str(r) == 'üëç':
                    self.voted_up += 1
                if str(r) == 'üëé':
                    self.voted_down += 1

                self.checked.append(u.id)
        checkloop = self.bot.loop.create_task(checking())
        await asyncio.sleep(8)
        checkloop.cancel()

        embed = discord.Embed(title='–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –æ–∫–æ–Ω—á–µ–Ω–æ!',
                              description=f'```{msg}```\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:\nüëç: {self.voted_up}\nüëé: {self.voted_down}')
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')

        await ctx.send(embed=embed)

    @commands.command(name='pokemon')
    async def pokemon_game(self, ctx):
        """–ò–≥—Ä–∞ ‚Äú–£–≥–∞–¥–∞–π –ø–æ–∫–µ–º–æ–Ω–∞‚Äû.

        –°—É—Ç—å –∏–≥—Ä—ã –ø—Ä–æ—Å—Ç–∞ - –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç –∏–º—è –ø–æ–∫–µ–º–æ–Ω–∞,
            –∏–∑–æ–±—Ä–∞–∂–µ–Ω–Ω–æ–≥–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
        """

        def message_check(m):
            return m.author.id == ctx.author.id
        
        resp = requests.get('https://pokeapi.co/api/v2/pokemon/')
        pokemons = [x['name'] for x in resp.json()['results']]

        pokemon_name = choice(pokemons)
        pokemon = pb.pokemon(pokemon_name)

        embed = discord.Embed(color=0x42f453, title='–ò–≥—Ä–∞ ‚Äú–£–≥–∞–¥–∞–π –ø–æ–∫–µ–º–æ–Ω–∞‚Äû',
                    description='–£ –≤–∞—Å –µ—Å—Ç—å 30 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –æ—Ç–≥–∞–¥–∞—Ç—å —ç—Ç–æ–≥–æ –ø–æ–∫–µ–º–æ–Ω–∞.\n–ü–∏—à–∏—Ç–µ –∏–º—è –ª–∞—Ç–∏–Ω–∏—Ü–µ–π.')
        embed.set_author(name=ctx.author.name, icon_url=ctx.author.avatar_url)
        embed.set_footer(text=f'{ctx.prefix}{ctx.command}')
        embed.set_image(url=f'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/{pokemon.id}.png')
        await ctx.send(embed=embed)

        msg = await self.bot.wait_for('message', check=message_check, timeout=30.0)
        
        if msg.content.lower() == pokemon_name:
            await ctx.send('–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ! :cake:')
        else:
            await ctx.send('–û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π. –ù–∏—á–µ–≥–æ, –ø–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!')

    @commands.command(name='prediction', aliases=['predict'])
    async def prediction(self, ctx, *, message: str):
        """–ú–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - –≤–∞—à –≤–æ–ø—Ä–æ—Å
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!predict –Ø –≤—ã–∏–≥—Ä–∞—é –º–∏–ª–ª–∏–æ–Ω?
        ```
        """
        possible = [
            '–í–µ—Ä–æ—è—Ç–Ω–æ, –Ω–µ—Ç.', '–í—Ä—è–¥ –ª–∏...', '–û—á–µ–Ω—å —Å–æ–º–Ω–µ–≤–∞—é—Å—å.', '–ú–æ–∂–µ—Ç –±—ã—Ç—å.',
            '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ!', '–ú–æ–π –æ—Ç–≤–µ—Ç: –ù–µ—Ç.', '–í–æ–æ–±—â–µ –ø–æ–Ω—è—Ç–∏—è –Ω–µ –∏–º–µ—é.',
            '–í–æ–∑–º–æ–∂–Ω–æ, –Ω–æ —à–∞–Ω—Å—ã –æ—á–µ–Ω—å –º–∞–ª—ã.', '–î—É–º–∞—é, —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ.', '–ù–µ –æ—Ç—Ä–∏—Ü–∞—é :thinking:',
            '–ú–æ–π –æ—Ç–≤–µ—Ç: –î–∞.', '–ü–æ–ª–∞–≥–∞—é, —ç—Ç–æ —Ç–∞–∫.', '–ù–µ—Å–æ–º–Ω–µ–Ω–Ω–æ.', '–†–∞–∑—É–º–µ–µ—Ç—Å—è, –¥–∞.']

        if len(message) <= 1:
            i_choice_it = randint(0, 5)
            return await ctx.send('{0}, {1}'.format(ctx.author.mention, possible[i_choice_it]))

        if len(message) >= 15:
            i_choice_it = randint(0, 8)
            return await ctx.send('{0}, {1}'.format(ctx.author.mention, possible[i_choice_it]))

        if len(message) >= 2 and len(message) <= 14:
            i_choice_it = randint(0, 13)
            return await ctx.send('{0}, {1}'.format(ctx.author.mention, possible[i_choice_it]))

    @commands.command(name='random', aliases=['randuser', 'randomuser', 'rand-user'])
    async def randomuser(self, ctx, *, message: str):
        """–í—ã–±—Ä–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - —Å–æ–æ–±—â–µ–Ω–∏–µ.
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!randuser –ø—Ä–æ–∏–≥—Ä–∞–ª 5–∫ —Ä—É–±–ª–µ–π!
        n!random –Ω–µ –ø–æ–∫—É—à–∞–ª –∫–∞—à—É
        ```
        """
        await ctx.send(embed=discord.Embed(timestamp=ctx.message.created_at,
            color=randint(0x000000, 0xFFFFFF),
            description=f'{choice([x.mention for x in ctx.guild.members])} {message}'))

    @commands.command(name='myname', aliases=['my-name'])
    @commands.guild_only()
    async def myname(self, ctx, *, nickname: str = None):
        """–°–º–µ–Ω–∏—Ç—å –≤–∞—à –Ω–∏–∫–Ω–µ–π–º

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:nickname` - –Ω–æ–≤—ã–π –Ω–∏–∫–Ω–µ–π–º (–æ—Å—Ç–∞–≤—å—Ç–µ –ø—É—Å—Ç—ã–º –¥–ª—è —Å–±—Ä–æ—Å–∞)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!myname –†–∞–º–æ—á–∫–∞
        n!myname
        ```
        """

        await ctx.author.edit(nick=nickname, reason='–ó–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.')

    @commands.command(name='talk', aliases=['t'])
    async def talk(self, ctx, *, message: commands.clean_content):
        """–û–±—â–µ–Ω–∏–µ —Å –±–æ—Ç–æ–º (–∏—Å–ø–æ–ª—å–∑—É—è Google DialogFlow).

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!talk –ü—Ä–∏–≤–µ—Ç, —á—Ç–æ –¥–µ–ª–∞–µ—à—å?
        ```
        """
        
        ai = apiai.ApiAI(os.getenv('TALK_SERVICE_TOKEN'))

        request = ai.text_request()
        request.lang = 'ru'
        request.session_id = os.getenv('TALK_SERVICE_SESSION_ID')
        request.query = message
        responseJson = json.loads(request.getresponse().read().decode('utf-8'))
        response = responseJson['result']['fulfillment']['speech']

        if response:
            await ctx.send(response)

        else:
            no_answer = choice(['–ù–µ –∑–Ω–∞—é, –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å...',
                                '–ü–æ–ª–∞–≥–∞—é, —É –º–µ–Ω—è –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞.',
                                '~~–ö–∞–∫ –∂–µ –æ—Ç–≤–µ—Ç–∏—Ç—å, –∫–∞–∫ –∂–µ –æ—Ç–≤–µ—Ç–∏—Ç—å...~~',
                                '–ò–∑–≤–∏–Ω—è—é—Å—å, –Ω–æ —è –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –æ—Ç–≤–µ—Ç–∏—Ç—å...'])
            await ctx.send(no_answer)

    @commands.command(name='helloworld', aliases=['hw'])
    async def helloworld(self, ctx):
        await ctx.send('Hello, %s' % ctx.author.mention)

    @commands.command(name='say', aliases=['repeat', 'msg'])
    async def say(self, ctx, *, message: commands.clean_content):
        """–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:message` - —Å–æ–æ–±—â–µ–Ω–∏–µ.
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!say –Ø - –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç, –º–Ω–µ –Ω–µ—Ç —Ä–∞–≤–Ω—ã—Ö. –ù–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ.
        ```
        """
        try:
            await ctx.message.delete()
        except:
            pass
        await ctx.send(message)

    @commands.command(name='neko', aliases=['catgirl', 'nekogirl'])
    @commands.is_nsfw()
    async def catgirl(self, ctx, tag: str = None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –∞–Ω–∏–º–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:tag` - —Ç–µ–≥ (–∏–ª–∏ "help" –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–µ–≥–æ–≤)
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!neko help
        n!neko avatar
        ```
        """
        nekoframe = discord.Embed(timestamp=ctx.message.created_at, color=0xF13875)

        if tag not in nekos_tags:
            nekoframe.add_field(name='–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–≥–∏:',
                                value=', '.join(nekos_tags))

        else:
            nekoframe.set_image(url=get_neko(tag))

        await ctx.send(embed=nekoframe)

    @commands.command(name='avatar', aliases=['useravatar'])
    async def avatar(self, ctx, member: discord.Member = None):
        """–ü–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä–∫—É —É—á–∞—Å—Ç–Ω–∏–∫–∞.

        –ê—Ä–≥—É–º–µ–Ω—Ç—ã:
        `:member` - —É—á–∞—Å—Ç–Ω–∏–∫
        __                                            __
        –ù–∞–ø—Ä–∏–º–µ—Ä:
        ```
        n!avatar Username
        n!avatar @Username#123
        ```
        """

        if not member:
            member = ctx.author

        if not member.avatar_url:
            a = discord.Embed(timestamp=ctx.message.created_at, color=0xfA0000, title=f'–ê–≤–∞—Ç–∞—Ä–∫–∞ {member}')
            a.set_image(url=member.default_avatar_url)
            a.set_footer(text=ctx.prefix + 'avatar [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]')
            await ctx.send(embed=a)

        else:
            a = discord.Embed(timestamp=ctx.message.created_at, color=0xfA0000, title=f'–ê–≤–∞—Ç–∞—Ä–∫–∞ {member}')
            a.set_image(url=member.avatar_url_as(static_format='png', size=1024))
            a.set_footer(text=ctx.prefix + 'avatar [@–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å]')
            await ctx.send(embed=a)

def setup(bot):
    bot.add_cog(Fun(bot))
    print('[fun.py] –ú–æ–¥—É–ª—å "Member/Fun" –∑–∞–≥—Ä—É–∂–µ–Ω.')
